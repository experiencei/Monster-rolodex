{"version":3,"sources":["components/Card/card.jsx","components/Cardlist/cardlist.jsx","components/search/search.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monste","id","name","email","Cardlist","monster","map","Search","type","placeholder","onChange","App","handleSearch","e","setState","search","target","value","state","valu","fetch","then","Response","json","this","searchField","filter","val","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAaeA,MAVf,SAAcC,GACV,OACI,sBAAKC,UAAU,iBAAf,UACA,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,OAAOC,GAAvC,4BACtB,6BAAKL,EAAMI,OAAOE,OAClB,4BAAIN,EAAMI,OAAOG,YCQVC,G,MAbE,SAAAR,GACb,OACI,qBAAKC,UAAU,YAAf,SACID,EAAMS,QAAQC,KAAI,SAACD,GAAD,OACf,cAAC,EAAD,CAEIL,OAAQK,GADHA,EAAQJ,WCNjB,SAASM,EAAOX,GAC3B,OACI,qBAAKC,UAAU,SAAf,SACC,uBACDW,KAAK,SACLC,YAAab,EAAMa,YACnBC,SAAUd,EAAMc,a,ICuCTC,E,kDA1Cb,aAAe,IAAD,8BACZ,gBAaFC,aAAe,SAACC,GACd,EAAKC,SAAS,CAACC,OAAOF,EAAEG,OAAOC,SAb/B,EAAKC,MAAQ,CACXC,KAAO,GACPJ,OAAS,IAJC,E,qDAQd,WAAoB,IAAD,OACjBK,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAF,GAAI,OAAI,EAAKL,SAAS,CAACK,c,oBAO/B,WACI,MAAuBK,KAAKN,MAArBC,EAAP,EAAOA,KAAMJ,EAAb,EAAaA,OACPU,EACJN,EAAKO,QAAQ,SAAAC,GAAG,OACdA,EAAIzB,KAAK0B,cAAcC,SAASd,EAAOa,kBAG7C,OACE,sBAAK/B,UAAU,MAAf,UACA,iDACA,cAACU,EAAD,CACEE,YAAa,mBACbC,SAAUc,KAAKZ,eAGjB,cAAC,EAAD,CACEP,QAASoB,W,GAnCCK,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d7c41d47.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./card.css\";\r\n\r\nfunction Card(props) {\r\n    return (\r\n        <div className='card-container'>\r\n        <img alt=\"Monster\" src={`https://robohash.org/${props.monste.id}?set=set2&size=180x180`}></img>\r\n        <h1>{props.monste.name}</h1>\r\n        <p>{props.monste.email}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from \"../Card/card\";\r\nimport \"./cardlist.css\";\r\nconst Cardlist = props => {\r\n    return (\r\n        <div className='card-list'>\r\n           {props.monster.map((monster) => (\r\n               <Card\r\n                   key={monster.id}\r\n                   monste={monster}\r\n               />\r\n          ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cardlist\r\n","import React from 'react'\r\n\r\nexport default function Search(props) {\r\n    return (\r\n        <div className=\"search\">\r\n         <input\r\n        type=\"search\"\r\n        placeholder={props.placeholder}\r\n        onChange={props.onChange}\r\n      />\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\nimport \"./App.css\";\nimport Cardlist from \"./components/Cardlist/cardlist\";\nimport Search from './components/search/search';\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      valu : [],\n      search : ''\n    }\n  }\n  \n  componentDidMount(){\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n    .then(Response => Response.json())\n    .then(valu => this.setState({valu}))\n  }\n\n  handleSearch = (e) => {\n    this.setState({search:e.target.value})\n  }\n\n  render() {\n      const {valu ,search} = this.state;\n      const searchField =\n        valu.filter( val => \n          val.name.toLowerCase().includes(search.toLowerCase())\n        )\n    \n    return (\n      <div className=\"App\">\n      <h1>Monster Rolodex</h1>\n      <Search\n        placeholder={\"search 4 monster\"}\n        onChange={this.handleSearch}\n      />\n      \n      <Cardlist\n        monster={searchField}\n      />\n\n      </div>\n    )\n  }\n}\n\nexport default App;\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}